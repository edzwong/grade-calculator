{"version":3,"sources":["components/EntryLine/EntryLine.js","pages/GradeCalculator.js","App.js","index.js"],"names":["EntryLine","handleChange","event","props","onChange","id","target","className","value","type","this","grade","weight","React","Component","GradeCalculator","field","newArray","state","entries","slice","setState","onClick","average","entry","parseInt","console","log","clear","numEntry","map","key","App","ReactDOM","render","document","getElementById"],"mappings":"uUAwBeA,G,iNAlBXC,aAAe,SAACC,GACZ,EAAKC,MAAMC,SAAS,EAAKD,MAAME,GAAIH,EAAMI,OAAOC,UAAWL,EAAMI,OAAOE,Q,wEAIxE,OACI,yBAAKD,UAAU,cACX,0BAAMA,UAAU,YACZ,2BAAOA,UAAU,QAAQE,KAAK,SAASD,MAAOE,KAAKP,MAAMQ,MAAOP,SAAUM,KAAKT,eADnF,MAGA,0BAAMM,UAAU,YACZ,2BAAOA,UAAU,SAASE,KAAK,SAASD,MAAOE,KAAKP,MAAMS,OAAQR,SAAUM,KAAKT,eADrF,W,GAZQY,IAAMC,YC0EfC,G,kBAxEX,aAAe,IAAD,8BACV,+CAUJX,SAAW,SAACC,EAAIW,EAAOR,GACnB,IAAIS,EAAW,EAAKC,MAAMC,QAAQC,QACpB,UAAVJ,EACAC,EAASZ,GAAIM,MAAQH,EAErBS,EAASZ,GAAIO,OAASJ,EAE1B,EAAKa,SAAS,CAAEF,QAASF,KAlBf,EAqBdK,QAAU,WACN,IAAIC,EAAU,EACVX,EAAS,EAFD,uBAGZ,YAAkB,EAAKM,MAAMC,QAA7B,+CAAsC,CAAC,IAA9BK,EAA6B,QAClCD,GAAWC,EAAMb,OAASa,EAAMZ,OAAS,KACzCA,GAAUa,SAASD,EAAMZ,SALjB,kFAOZc,QAAQC,IAAIJ,GACZG,QAAQC,IAAIf,EAAS,KAAO,IA7BlB,EAgCdgB,MAAQ,WACJ,IAAIX,EAAW,EAAKC,MAAMC,QAAQC,QADxB,uBAEV,YAAkBH,EAAlB,+CAA4B,CAAC,IAApBO,EAAmB,QACxBA,EAAMb,MAAQ,GACda,EAAMZ,OAAS,IAJT,kFAMV,EAAKS,SAAS,CAAEF,QAASF,KApCzB,EAAKC,MAAQ,CACTW,SAAU,EACVV,QAAS,CACL,CAAEd,GAAI,EAAGM,MAAO,GAAIC,OAAQ,IAC5B,CAAEP,GAAI,EAAGM,MAAO,GAAIC,OAAQ,MAN1B,E,sEAyCJ,IAAD,OACL,OACI,yBAAKL,UAAU,mBACX,gDACA,2IACA,yBAAKA,UAAU,SACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,UAAd,SACA,wBAAIA,UAAU,UAAd,WAGAG,KAAKQ,MAAMC,QAAQW,IAAI,SAAAN,GAAK,OACxB,kBAAC,EAAD,CACIO,IAAKP,EAAMnB,GACXA,GAAImB,EAAMnB,GACVM,MAAOa,EAAMb,MACbC,OAAQY,EAAMZ,OACdR,SAAU,EAAKA,aAG3B,yBAAKG,UAAU,WACX,4BAAQe,QAASZ,KAAKY,SAAtB,iBACA,4BAAQA,QAASZ,KAAKkB,OAAtB,gB,GAhEMf,IAAMC,Y,MCQrBkB,MARf,WACE,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,QCHN0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.00ed6701.chunk.js","sourcesContent":["import React from 'react';\n\nimport './EntryLine.css';\n\nclass EntryLine extends React.Component {\n\n    handleChange = (event) => {\n        this.props.onChange(this.props.id, event.target.className, event.target.value)\n    }\n\n    render() {\n        return (\n            <div className=\"gradeEntry\">\n                <span className=\"entryBox\">\n                    <input className=\"grade\" type=\"number\" value={this.props.grade} onChange={this.handleChange} /> %\n                </span>\n                <span className=\"entryBox\">\n                    <input className=\"weight\" type=\"number\" value={this.props.weight} onChange={this.handleChange} /> %\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default EntryLine;","import React from 'react';\nimport EntryLine from '../components/EntryLine/EntryLine';\n\nimport './GradeCalculator.css';\n\nclass GradeCalculator extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            numEntry: 2,\n            entries: [\n                { id: 0, grade: '', weight: '' },\n                { id: 1, grade: '', weight: '' }\n            ]\n        };\n    }\n\n    onChange = (id, field, value) => {\n        var newArray = this.state.entries.slice();\n        if (field === \"grade\") {\n            newArray[id].grade = value;\n        } else {\n            newArray[id].weight = value;\n        }\n        this.setState({ entries: newArray });\n    }\n\n    onClick = () => {\n        var average = 0;\n        var weight = 0;\n        for (var entry of this.state.entries) {\n            average += entry.grade * (entry.weight / 100);\n            weight += parseInt(entry.weight);\n        };\n        console.log(average);\n        console.log(weight / 100 || 0);\n    }\n\n    clear = () => {\n        var newArray = this.state.entries.slice();\n        for (var entry of newArray) {\n            entry.grade = '';\n            entry.weight = '';\n        };\n        this.setState({ entries: newArray });\n    }\n\n    render() {\n        return (\n            <div className=\"gradeCalculator\">\n                <h1>Grade Calculator</h1>\n                <span>Instructions: enter your grades and their weight as percentages but do not include the percent sign (%). </span>\n                <div className=\"table\">\n                    <div className=\"columnHeaders\">\n                        <h3 className=\"header\">Grade</h3>\n                        <h3 className=\"header\">Weight</h3>\n                    </div>\n                    {\n                        this.state.entries.map(entry => (\n                            <EntryLine\n                                key={entry.id}\n                                id={entry.id}\n                                grade={entry.grade}\n                                weight={entry.weight}\n                                onChange={this.onChange} />\n                        ))\n                    }\n                    <div className=\"buttons\">\n                        <button onClick={this.onClick}>Am I Failing?</button>\n                        <button onClick={this.clear}>Clear</button>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GradeCalculator;","import React from 'react';\nimport GradeCalculator from './pages/GradeCalculator';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <GradeCalculator/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}