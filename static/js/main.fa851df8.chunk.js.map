{"version":3,"sources":["components/EntryLine/EntryLine.js","components/EntryTable/EntryTable.js","pages/GradeCalculator.js","App.js","index.js"],"names":["EntryLine","handleChange","event","props","onChange","id","target","className","value","type","this","grade","weight","React","Component","EntryTable","field","newArray","state","entries","slice","setState","calcAverage","average","entry","parseInt","handleAverage","toFixed","clear","addRow","prevState","numEntry","map","key","onClick","GradeCalculator","getAverage","printAverage","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa851df8.chunk.js","sourcesContent":["import React from 'react';\n\nimport './EntryLine.css';\n\nclass EntryLine extends React.Component {\n\n    handleChange = (event) => {\n        this.props.onChange(this.props.id, event.target.className, event.target.value)\n    }\n\n    render() {\n        return (\n            <div className=\"gradeEntry\">\n                <span className=\"entryBox\">\n                    <input className=\"grade\" type=\"number\" value={this.props.grade} onChange={this.handleChange} /> %\n                </span>\n                <span className=\"entryBox\">\n                    <input className=\"weight\" type=\"number\" value={this.props.weight} onChange={this.handleChange} /> %\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default EntryLine;","import React from 'react';\nimport EntryLine from '../EntryLine/EntryLine';\n\nimport './EntryTable.css';\n\nclass EntryTable extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            entries: [\n                { id: 0, grade: '', weight: '' },\n                { id: 1, grade: '', weight: '' },\n                { id: 2, grade: '', weight: ''},\n                { id: 3, grade: '', weight: ''},\n                { id: 4, grade: '', weight: ''}\n            ],\n            numEntry: 5\n        };\n    }\n\n    onChange = (id, field, value) => {\n        var newArray = this.state.entries.slice();\n        if (field === \"grade\") {\n            newArray[id].grade = value;\n        } else {\n            newArray[id].weight = value;\n        }\n        this.setState({ entries: newArray }, this.calcAverage());\n    }\n\n    calcAverage = () => {\n        var average = 0;\n        var weight = 0;\n        for (var entry of this.state.entries) {\n            average += entry.grade * (entry.weight / 100);\n            weight += parseInt(entry.weight) || 0;\n        };\n        this.props.handleAverage(average.toFixed(2), weight);\n    }\n\n    clear = () => {\n        var newArray = this.state.entries.slice();\n        for (var entry of newArray) {\n            entry.grade = '';\n            entry.weight = '';\n        };\n        this.setState({ entries: newArray });\n    }\n\n    addRow = () => {\n        this.setState((prevState) => ({ \n            entries: [...prevState.entries, {id: prevState.numEntry, grade: '', weight: ''}],\n            numEntry: prevState.numEntry + 1 \n            })\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"entryTable\">\n                {\n                    this.state.entries.map(entry => (\n                        <EntryLine\n                            key={entry.id}\n                            id={entry.id}\n                            grade={entry.grade}\n                            weight={entry.weight}\n                            onChange={this.onChange} />\n                    ))\n                }\n                <div className=\"buttons\">\n                    <button onClick={this.addRow}>Add New Row</button>\n                    <button onClick={this.clear}>Clear</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default EntryTable;","import React from 'react';\nimport EntryTable from '../components/EntryTable/EntryTable';\n\nimport './GradeCalculator.css';\n\nclass GradeCalculator extends React.Component {\n    state = {\n        average: 0,\n        weight: 0\n    }\n\n    getAverage = (average, weight) => {\n        this.setState({\n            average: average,\n            weight: weight\n        })\n    }\n\n    printAverage = () => {\n        if ( (this.state.weight !== 0)) {\n            console.log(this.state.average + \" \" + this.state.weight);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"gradeCalculator\">\n                <h1>Grade Calculator</h1>\n                <span>Instructions: enter your grades and their weight as percentages but do not include the percent sign (%). </span>\n                <div className=\"table\">\n                    <div className=\"columnHeaders\">\n                        <h3 className=\"header\">Grade</h3>\n                        <h3 className=\"header\">Weight</h3>\n                    </div>\n                    <EntryTable handleAverage={this.getAverage}/>\n                    <button id=\"averageButton\" onClick={this.printAverage}>Am I Failing?</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GradeCalculator;","import React from 'react';\nimport GradeCalculator from './pages/GradeCalculator';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <GradeCalculator/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}